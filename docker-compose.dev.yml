version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanagement-backend-dev
    environment:
      DATABASE_URL: postgresql://marketing_system_user:1vACneXxnqKAZR3eBNwNPrWl4s1ZXyLH@dpg-d3d7f7i4d50c73d560qg-a.oregon-postgres.render.com/marketing_system?sslmode=require
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      AI_SERVICE_URL: http://ai-service:8001
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
      PORT: 3001
      NODE_ENV: development
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend:/app
      - /app/node_modules
    networks:
      - taskmanagement-network

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: taskmanagement-ai-dev
    environment:
      PORT: 8001
      ENVIRONMENT: development
      AI_PROVIDER: gemini
      GOOGLE_API_KEY: AIzaSyBlMmpWp0EeZnb4D0NECDeP073DPGodhso
      GEMINI_MODEL: gemini-2.0-flash
      MODEL_CACHE_DIR: ./models
      MAX_SUMMARY_LENGTH: 150
      LOG_LEVEL: DEBUG
      RATE_LIMIT_REQUESTS: 60
      RATE_LIMIT_INTERVAL: 60
      CACHE_ENABLED: "true"
      CACHE_TTL: 3600
    ports:
      - "8001:8001"
    volumes:
      - ./ai-service:/app
      - /app/venv
      - ai_models:/app/models
    networks:
      - taskmanagement-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanagement-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - taskmanagement-network

volumes:
  ai_models:

networks:
  taskmanagement-network:
    driver: bridge
