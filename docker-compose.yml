version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanagement-backend
    environment:
      DATABASE_URL: postgresql://marketing_system_user:1vACneXxnqKAZR3eBNwNPrWl4s1ZXyLH@dpg-d3d7f7i4d50c73d560qg-a.oregon-postgres.render.com/marketing_system?sslmode=require
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      AI_SERVICE_URL: http://ai-service:8001
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
      PORT: 3001
      NODE_ENV: development
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - taskmanagement-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: taskmanagement-ai
    environment:
      PORT: 8001
      ENVIRONMENT: production
      MODEL_CACHE_DIR: ./models
      MAX_SUMMARY_LENGTH: 150
      LOG_LEVEL: INFO
    ports:
      - "8001:8001"
    volumes:
      - ai_models:/app/models
    networks:
      - taskmanagement-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanagement-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_AI_SERVICE_URL: http://localhost:8001
    ports:
      - "5173:5173"
    depends_on:
      - backend
      - ai-service
    networks:
      - taskmanagement-network

volumes:
  backend_uploads:
  ai_models:

networks:
  taskmanagement-network:
    driver: bridge
